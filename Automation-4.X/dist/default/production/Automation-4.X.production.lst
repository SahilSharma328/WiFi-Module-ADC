

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Jan 10 13:12:27 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20  0000                     
    21                           ; Version 1.41
    22                           ; Generated 25/01/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F45K22 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     _ANSELA	set	3896
    56  0000                     _ANSELC	set	3898
    57  0000                     _ADRES	set	4035
    58  0000                     _TRISA	set	3986
    59  0000                     _TRISC	set	3988
    60  0000                     _ADCON0bits	set	4034
    61  0000                     _ADCON0	set	4034
    62  0000                     _ADCON2	set	4032
    63  0000                     _ADCON1	set	4033
    64  0000                     _TXREG1	set	4013
    65  0000                     _SPBRG1	set	4015
    66  0000                     _SPBRGH1	set	4016
    67  0000                     _TXSTA1bits	set	4012
    68  0000                     _RCSTA1bits	set	4011
    69  0000                     _BAUDCON1bits	set	4024
    70  0000                     _TXSTAbits	set	4012
    71  0000                     _RCSTA1	set	4011
    72  0000                     _TXSTA1	set	4012
    73  0000                     _ADON	set	32272
    74  0000                     _TX1IF	set	31988
    75                           
    76                           	psect	smallconst
    77  000600                     __psmallconst:
    78                           	opt stack 0
    79  000600  00                 	db	0
    80  000601                     STR_2:
    81  000601  41                 	db	65	;'A'
    82  000602  54                 	db	84	;'T'
    83  000603  2B                 	db	43
    84  000604  43                 	db	67	;'C'
    85  000605  57                 	db	87	;'W'
    86  000606  4A                 	db	74	;'J'
    87  000607  41                 	db	65	;'A'
    88  000608  50                 	db	80	;'P'
    89  000609  3D                 	db	61	;'='
    90  00060A  22                 	db	34
    91  00060B  4A                 	db	74	;'J'
    92  00060C  53                 	db	83	;'S'
    93  00060D  44                 	db	68	;'D'
    94  00060E  20                 	db	32
    95  00060F  45                 	db	69	;'E'
    96  000610  4C                 	db	76	;'L'
    97  000611  45                 	db	69	;'E'
    98  000612  43                 	db	67	;'C'
    99  000613  54                 	db	84	;'T'
   100  000614  52                 	db	82	;'R'
   101  000615  4F                 	db	79	;'O'
   102  000616  4E                 	db	78	;'N'
   103  000617  49                 	db	73	;'I'
   104  000618  43                 	db	67	;'C'
   105  000619  53                 	db	83	;'S'
   106  00061A  20                 	db	32
   107  00061B  22                 	db	34
   108  00061C  2C                 	db	44
   109  00061D  22                 	db	34
   110  00061E  47                 	db	71	;'G'
   111  00061F  50                 	db	80	;'P'
   112  000620  53                 	db	83	;'S'
   113  000621  42                 	db	66	;'B'
   114  000622  4F                 	db	79	;'O'
   115  000623  58                 	db	88	;'X'
   116  000624  5F                 	db	95	;'_'
   117  000625  6A                 	db	106	;'j'
   118  000626  73                 	db	115	;'s'
   119  000627  64                 	db	100	;'d'
   120  000628  40                 	db	64	;'@'
   121  000629  28                 	db	40
   122  00062A  2A                 	db	42
   123  00062B  26                 	db	38
   124  00062C  5E                 	db	94	;'^'
   125  00062D  35                 	db	53	;'5'
   126  00062E  34                 	db	52	;'4'
   127  00062F  33                 	db	51	;'3'
   128  000630  32                 	db	50	;'2'
   129  000631  31                 	db	49	;'1'
   130  000632  22                 	db	34
   131  000633  0D                 	db	13
   132  000634  0A                 	db	10
   133  000635  00                 	db	0
   134  000636                     STR_6:
   135  000636  41                 	db	65	;'A'
   136  000637  54                 	db	84	;'T'
   137  000638  2B                 	db	43
   138  000639  43                 	db	67	;'C'
   139  00063A  49                 	db	73	;'I'
   140  00063B  50                 	db	80	;'P'
   141  00063C  53                 	db	83	;'S'
   142  00063D  54                 	db	84	;'T'
   143  00063E  41                 	db	65	;'A'
   144  00063F  52                 	db	82	;'R'
   145  000640  54                 	db	84	;'T'
   146  000641  3D                 	db	61	;'='
   147  000642  34                 	db	52	;'4'
   148  000643  2C                 	db	44
   149  000644  22                 	db	34
   150  000645  54                 	db	84	;'T'
   151  000646  43                 	db	67	;'C'
   152  000647  50                 	db	80	;'P'
   153  000648  22                 	db	34
   154  000649  2C                 	db	44
   155  00064A  22                 	db	34
   156  00064B  31                 	db	49	;'1'
   157  00064C  38                 	db	56	;'8'
   158  00064D  34                 	db	52	;'4'
   159  00064E  2E                 	db	46
   160  00064F  31                 	db	49	;'1'
   161  000650  30                 	db	48	;'0'
   162  000651  36                 	db	54	;'6'
   163  000652  2E                 	db	46
   164  000653  31                 	db	49	;'1'
   165  000654  35                 	db	53	;'5'
   166  000655  33                 	db	51	;'3'
   167  000656  2E                 	db	46
   168  000657  31                 	db	49	;'1'
   169  000658  34                 	db	52	;'4'
   170  000659  39                 	db	57	;'9'
   171  00065A  22                 	db	34
   172  00065B  2C                 	db	44
   173  00065C  38                 	db	56	;'8'
   174  00065D  30                 	db	48	;'0'
   175  00065E  0D                 	db	13
   176  00065F  0A                 	db	10
   177  000660  00                 	db	0
   178  000661                     STR_8:
   179  000661  47                 	db	71	;'G'
   180  000662  45                 	db	69	;'E'
   181  000663  54                 	db	84	;'T'
   182  000664  20                 	db	32
   183  000665  2F                 	db	47
   184  000666  75                 	db	117	;'u'
   185  000667  70                 	db	112	;'p'
   186  000668  64                 	db	100	;'d'
   187  000669  61                 	db	97	;'a'
   188  00066A  74                 	db	116	;'t'
   189  00066B  65                 	db	101	;'e'
   190  00066C  3F                 	db	63	;'?'
   191  00066D  6B                 	db	107	;'k'
   192  00066E  65                 	db	101	;'e'
   193  00066F  79                 	db	121	;'y'
   194  000670  3D                 	db	61	;'='
   195  000671  4B                 	db	75	;'K'
   196  000672  4A                 	db	74	;'J'
   197  000673  58                 	db	88	;'X'
   198  000674  53                 	db	83	;'S'
   199  000675  32                 	db	50	;'2'
   200  000676  4C                 	db	76	;'L'
   201  000677  48                 	db	72	;'H'
   202  000678  36                 	db	54	;'6'
   203  000679  31                 	db	49	;'1'
   204  00067A  45                 	db	69	;'E'
   205  00067B  52                 	db	82	;'R'
   206  00067C  44                 	db	68	;'D'
   207  00067D  4A                 	db	74	;'J'
   208  00067E  44                 	db	68	;'D'
   209  00067F  41                 	db	65	;'A'
   210  000680  50                 	db	80	;'P'
   211  000681  26                 	db	38
   212  000682  66                 	db	102	;'f'
   213  000683  69                 	db	105	;'i'
   214  000684  65                 	db	101	;'e'
   215  000685  6C                 	db	108	;'l'
   216  000686  64                 	db	100	;'d'
   217  000687  31                 	db	49	;'1'
   218  000688  3D                 	db	61	;'='
   219  000689  00                 	db	0
   220  00068A                     STR_5:
   221  00068A  41                 	db	65	;'A'
   222  00068B  54                 	db	84	;'T'
   223  00068C  2B                 	db	43
   224  00068D  43                 	db	67	;'C'
   225  00068E  49                 	db	73	;'I'
   226  00068F  50                 	db	80	;'P'
   227  000690  53                 	db	83	;'S'
   228  000691  45                 	db	69	;'E'
   229  000692  52                 	db	82	;'R'
   230  000693  56                 	db	86	;'V'
   231  000694  45                 	db	69	;'E'
   232  000695  52                 	db	82	;'R'
   233  000696  3D                 	db	61	;'='
   234  000697  31                 	db	49	;'1'
   235  000698  2C                 	db	44
   236  000699  38                 	db	56	;'8'
   237  00069A  30                 	db	48	;'0'
   238  00069B  0D                 	db	13
   239  00069C  0A                 	db	10
   240  00069D  00                 	db	0
   241  00069E                     STR_7:
   242  00069E  41                 	db	65	;'A'
   243  00069F  54                 	db	84	;'T'
   244  0006A0  2B                 	db	43
   245  0006A1  43                 	db	67	;'C'
   246  0006A2  49                 	db	73	;'I'
   247  0006A3  50                 	db	80	;'P'
   248  0006A4  53                 	db	83	;'S'
   249  0006A5  45                 	db	69	;'E'
   250  0006A6  4E                 	db	78	;'N'
   251  0006A7  44                 	db	68	;'D'
   252  0006A8  3D                 	db	61	;'='
   253  0006A9  34                 	db	52	;'4'
   254  0006AA  2C                 	db	44
   255  0006AB  35                 	db	53	;'5'
   256  0006AC  30                 	db	48	;'0'
   257  0006AD  0D                 	db	13
   258  0006AE  0A                 	db	10
   259  0006AF  00                 	db	0
   260  0006B0                     STR_4:
   261  0006B0  41                 	db	65	;'A'
   262  0006B1  54                 	db	84	;'T'
   263  0006B2  2B                 	db	43
   264  0006B3  43                 	db	67	;'C'
   265  0006B4  49                 	db	73	;'I'
   266  0006B5  50                 	db	80	;'P'
   267  0006B6  4D                 	db	77	;'M'
   268  0006B7  55                 	db	85	;'U'
   269  0006B8  58                 	db	88	;'X'
   270  0006B9  3D                 	db	61	;'='
   271  0006BA  31                 	db	49	;'1'
   272  0006BB  0D                 	db	13
   273  0006BC  0A                 	db	10
   274  0006BD  00                 	db	0
   275  0006BE                     STR_1:
   276  0006BE  41                 	db	65	;'A'
   277  0006BF  54                 	db	84	;'T'
   278  0006C0  0D                 	db	13
   279  0006C1  0A                 	db	10
   280  0006C2  00                 	db	0
   281  0000                     
   282                           ; #config settings
   283  0006C3  00                 	db	0	; dummy byte at the end
   284  0000                     
   285                           	psect	cinit
   286  000A9A                     __pcinit:
   287                           	opt stack 0
   288  000A9A                     start_initialization:
   289                           	opt stack 0
   290  000A9A                     __initialization:
   291                           	opt stack 0
   292  000A9A                     end_of_initialization:
   293                           	opt stack 0
   294  000A9A                     __end_of__initialization:
   295                           	opt stack 0
   296  000A9A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   297  000A9C  6EF8               	movwf	tblptru,c
   298  000A9E  0E06               	movlw	high __Lsmallconst
   299  000AA0  6EF7               	movwf	tblptrh,c
   300  000AA2  0100               	movlb	0
   301  000AA4  EF62  F003         	goto	_main	;jump to C main() function
   302                           tblptru	equ	0xFF8
   303                           tblptrh	equ	0xFF7
   304                           
   305                           	psect	cstackCOMRAM
   306  000001                     __pcstackCOMRAM:
   307                           	opt stack 0
   308  000001                     ?_adc_read:
   309                           	opt stack 0
   310  000001                     ?___lwdiv:
   311                           	opt stack 0
   312  000001                     ?___lwmod:
   313                           	opt stack 0
   314  000001                     ?___lldiv:
   315                           	opt stack 0
   316  000001                     uart_send1@ch:
   317                           	opt stack 0
   318  000001                     uart_string1@str:
   319                           	opt stack 0
   320  000001                     ___lwdiv@dividend:
   321                           	opt stack 0
   322  000001                     ___lwmod@dividend:
   323                           	opt stack 0
   324  000001                     ___lldiv@dividend:
   325                           	opt stack 0
   326                           
   327                           ; 4 bytes @ 0x0
   328  000001                     	ds	2
   329  000003                     ??_adc_read:
   330  000003                     ___lwdiv@divisor:
   331                           	opt stack 0
   332  000003                     ___lwmod@divisor:
   333                           	opt stack 0
   334                           
   335                           ; 2 bytes @ 0x2
   336  000003                     	ds	2
   337  000005                     adc_read@channel:
   338                           	opt stack 0
   339  000005                     ___lwmod@counter:
   340                           	opt stack 0
   341  000005                     ___lwdiv@quotient:
   342                           	opt stack 0
   343  000005                     ___lldiv@divisor:
   344                           	opt stack 0
   345                           
   346                           ; 4 bytes @ 0x4
   347  000005                     	ds	2
   348  000007                     ___lwdiv@counter:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0x6
   352  000007                     	ds	1
   353  000008                     uart_num1@num:
   354                           	opt stack 0
   355                           
   356                           ; 2 bytes @ 0x7
   357  000008                     	ds	1
   358  000009                     ___lldiv@quotient:
   359                           	opt stack 0
   360                           
   361                           ; 4 bytes @ 0x8
   362  000009                     	ds	1
   363  00000A                     ??_uart_num1:
   364                           
   365                           ; 1 bytes @ 0x9
   366  00000A                     	ds	3
   367  00000D                     ___lldiv@counter:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0xC
   371  00000D                     	ds	1
   372  00000E                     uart_init1@baud:
   373                           	opt stack 0
   374  00000E                     uart_num1@n:
   375                           	opt stack 0
   376                           
   377                           ; 16 bytes @ 0xD
   378  00000E                     	ds	4
   379  000012                     uart_init1@n:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x11
   383  000012                     	ds	12
   384  00001E                     uart_num1@i:
   385                           	opt stack 0
   386                           
   387                           ; 1 bytes @ 0x1D
   388  00001E                     	ds	1
   389  00001F                     uart_num1@j:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0x1E
   393  00001F                     	ds	1
   394  000020                     ??_main:
   395                           
   396                           ; 1 bytes @ 0x1F
   397  000020                     	ds	2
   398  000022                     main@x:
   399                           	opt stack 0
   400                           
   401                           ; 2 bytes @ 0x21
   402  000022                     	ds	2
   403                           tblptru	equ	0xFF8
   404                           tblptrh	equ	0xFF7
   405                           
   406 ;;
   407 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   408 ;;
   409 ;; *************** function _main *****************
   410 ;; Defined at:
   411 ;;		line 157 in file "Automation-4.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;  x               2   33[COMRAM] int 
   416 ;; Return value:  Size  Location     Type
   417 ;;                  1    wreg      void 
   418 ;; Registers used:
   419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   420 ;; Tracked objects:
   421 ;;		On entry : 0/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   425 ;;      Params:         0       0       0       0       0       0       0
   426 ;;      Locals:         2       0       0       0       0       0       0
   427 ;;      Temps:          2       0       0       0       0       0       0
   428 ;;      Totals:         4       0       0       0       0       0       0
   429 ;;Total ram usage:        4 bytes
   430 ;; Hardware stack levels required when called:    2
   431 ;; This function calls:
   432 ;;		_adc_init
   433 ;;		_adc_read
   434 ;;		_uart_init1
   435 ;;		_uart_num1
   436 ;;		_uart_string1
   437 ;; This function is called by:
   438 ;;		Startup code after reset
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442                           	psect	text0
   443  0006C4                     __ptext0:
   444                           	opt stack 0
   445  0006C4                     _main:
   446                           	opt stack 29
   447                           
   448                           ;Automation-4.c: 160: ANSELC=0;
   449                           
   450                           ;incstack = 0
   451  0006C4  0E00               	movlw	0
   452  0006C6  010F               	movlb	15	; () banked
   453  0006C8  6F3A               	movwf	58,b	;volatile
   454                           
   455                           ;Automation-4.c: 161: TRISC=0x00;
   456  0006CA  0E00               	movlw	0
   457  0006CC  6E94               	movwf	3988,c	;volatile
   458                           
   459                           ;Automation-4.c: 162: ANSELA=1;
   460  0006CE  0E01               	movlw	1
   461  0006D0  010F               	movlb	15	; () banked
   462  0006D2  6F38               	movwf	56,b	;volatile
   463                           
   464                           ;Automation-4.c: 163: TRISA=0x11;
   465  0006D4  0E11               	movlw	17
   466  0006D6  6E92               	movwf	3986,c	;volatile
   467                           
   468                           ; BSR set to: 15
   469                           ;Automation-4.c: 164: adc_init();
   470  0006D8  EC5A  F005         	call	_adc_init	;wreg free
   471                           
   472                           ;Automation-4.c: 165: uart_init1(115200);
   473  0006DC  0E00               	movlw	0
   474  0006DE  6E0E               	movwf	uart_init1@baud,c
   475  0006E0  0EC2               	movlw	194
   476  0006E2  6E0F               	movwf	uart_init1@baud+1,c
   477  0006E4  0E01               	movlw	1
   478  0006E6  6E10               	movwf	uart_init1@baud+2,c
   479  0006E8  0E00               	movlw	0
   480  0006EA  6E11               	movwf	uart_init1@baud+3,c
   481  0006EC  ECCA  F004         	call	_uart_init1	;wreg free
   482                           
   483                           ;Automation-4.c: 166: _delay((unsigned long)((1000)*(16000000/4000.0)));
   484  0006F0  0E15               	movlw	21
   485  0006F2  6E21               	movwf	(??_main+1)& (0+255),c
   486  0006F4  0E4B               	movlw	75
   487  0006F6  6E20               	movwf	??_main& (0+255),c
   488  0006F8  0EBE               	movlw	190
   489  0006FA                     u347:
   490  0006FA  2EE8               	decfsz	wreg,f,c
   491  0006FC  D7FE               	bra	u347
   492  0006FE  2E20               	decfsz	??_main& (0+255),f,c
   493  000700  D7FC               	bra	u347
   494  000702  2E21               	decfsz	(??_main+1)& (0+255),f,c
   495  000704  D7FA               	bra	u347
   496  000706  D000               	nop2	
   497                           
   498                           ;Automation-4.c: 167: uart_string1("AT\r\n");
   499  000708  0EBE               	movlw	low STR_1
   500  00070A  6E01               	movwf	uart_string1@str,c
   501  00070C  0E06               	movlw	high STR_1
   502  00070E  6E02               	movwf	uart_string1@str+1,c
   503  000710  EC37  F005         	call	_uart_string1	;wreg free
   504                           
   505                           ;Automation-4.c: 168: _delay((unsigned long)((1000)*(16000000/4000.0)));
   506  000714  0E15               	movlw	21
   507  000716  6E21               	movwf	(??_main+1)& (0+255),c
   508  000718  0E4B               	movlw	75
   509  00071A  6E20               	movwf	??_main& (0+255),c
   510  00071C  0EBE               	movlw	190
   511  00071E                     u357:
   512  00071E  2EE8               	decfsz	wreg,f,c
   513  000720  D7FE               	bra	u357
   514  000722  2E20               	decfsz	??_main& (0+255),f,c
   515  000724  D7FC               	bra	u357
   516  000726  2E21               	decfsz	(??_main+1)& (0+255),f,c
   517  000728  D7FA               	bra	u357
   518  00072A  D000               	nop2	
   519                           
   520                           ;Automation-4.c: 169: uart_string1("AT+CWJAP=\"JSD ELECTRONICS \",\"GPSBOX_jsd@(*&^54321
      +                          \"\r\n");
   521  00072C  0E01               	movlw	low STR_2
   522  00072E  6E01               	movwf	uart_string1@str,c
   523  000730  0E06               	movlw	high STR_2
   524  000732  6E02               	movwf	uart_string1@str+1,c
   525  000734  EC37  F005         	call	_uart_string1	;wreg free
   526                           
   527                           ;Automation-4.c: 170: _delay((unsigned long)((10000)*(16000000/4000.0)));
   528  000738  0ECB               	movlw	203
   529  00073A  6E21               	movwf	(??_main+1)& (0+255),c
   530  00073C  0EEC               	movlw	236
   531  00073E  6E20               	movwf	??_main& (0+255),c
   532  000740  0E84               	movlw	132
   533  000742                     u367:
   534  000742  2EE8               	decfsz	wreg,f,c
   535  000744  D7FE               	bra	u367
   536  000746  2E20               	decfsz	??_main& (0+255),f,c
   537  000748  D7FC               	bra	u367
   538  00074A  2E21               	decfsz	(??_main+1)& (0+255),f,c
   539  00074C  D7FA               	bra	u367
   540  00074E  D000               	nop2	
   541  000750                     l1013:
   542                           
   543                           ;Automation-4.c: 173: {
   544                           ;Automation-4.c: 174: uart_string1("AT\r\n");
   545  000750  0EBE               	movlw	low STR_1
   546  000752  6E01               	movwf	uart_string1@str,c
   547  000754  0E06               	movlw	high STR_1
   548  000756  6E02               	movwf	uart_string1@str+1,c
   549  000758  EC37  F005         	call	_uart_string1	;wreg free
   550                           
   551                           ;Automation-4.c: 175: _delay((unsigned long)((2000)*(16000000/4000.0)));
   552  00075C  0E29               	movlw	41
   553  00075E  6E21               	movwf	(??_main+1)& (0+255),c
   554  000760  0E96               	movlw	150
   555  000762  6E20               	movwf	??_main& (0+255),c
   556  000764  0E7F               	movlw	127
   557  000766                     u377:
   558  000766  2EE8               	decfsz	wreg,f,c
   559  000768  D7FE               	bra	u377
   560  00076A  2E20               	decfsz	??_main& (0+255),f,c
   561  00076C  D7FC               	bra	u377
   562  00076E  2E21               	decfsz	(??_main+1)& (0+255),f,c
   563  000770  D7FA               	bra	u377
   564  000772  F000               	nop	
   565                           
   566                           ;Automation-4.c: 176: uart_string1("AT+CIPMUX=1\r\n");
   567  000774  0EB0               	movlw	low STR_4
   568  000776  6E01               	movwf	uart_string1@str,c
   569  000778  0E06               	movlw	high STR_4
   570  00077A  6E02               	movwf	uart_string1@str+1,c
   571  00077C  EC37  F005         	call	_uart_string1	;wreg free
   572                           
   573                           ;Automation-4.c: 177: _delay((unsigned long)((1000)*(16000000/4000.0)));
   574  000780  0E15               	movlw	21
   575  000782  6E21               	movwf	(??_main+1)& (0+255),c
   576  000784  0E4B               	movlw	75
   577  000786  6E20               	movwf	??_main& (0+255),c
   578  000788  0EBE               	movlw	190
   579  00078A                     u387:
   580  00078A  2EE8               	decfsz	wreg,f,c
   581  00078C  D7FE               	bra	u387
   582  00078E  2E20               	decfsz	??_main& (0+255),f,c
   583  000790  D7FC               	bra	u387
   584  000792  2E21               	decfsz	(??_main+1)& (0+255),f,c
   585  000794  D7FA               	bra	u387
   586  000796  D000               	nop2	
   587                           
   588                           ;Automation-4.c: 178: uart_string1("AT+CIPSERVER=1,80\r\n");
   589  000798  0E8A               	movlw	low STR_5
   590  00079A  6E01               	movwf	uart_string1@str,c
   591  00079C  0E06               	movlw	high STR_5
   592  00079E  6E02               	movwf	uart_string1@str+1,c
   593  0007A0  EC37  F005         	call	_uart_string1	;wreg free
   594                           
   595                           ;Automation-4.c: 179: _delay((unsigned long)((1000)*(16000000/4000.0)));
   596  0007A4  0E15               	movlw	21
   597  0007A6  6E21               	movwf	(??_main+1)& (0+255),c
   598  0007A8  0E4B               	movlw	75
   599  0007AA  6E20               	movwf	??_main& (0+255),c
   600  0007AC  0EBE               	movlw	190
   601  0007AE                     u397:
   602  0007AE  2EE8               	decfsz	wreg,f,c
   603  0007B0  D7FE               	bra	u397
   604  0007B2  2E20               	decfsz	??_main& (0+255),f,c
   605  0007B4  D7FC               	bra	u397
   606  0007B6  2E21               	decfsz	(??_main+1)& (0+255),f,c
   607  0007B8  D7FA               	bra	u397
   608  0007BA  D000               	nop2	
   609                           
   610                           ;Automation-4.c: 180: uart_string1("AT+CIPSTART=4,\"TCP\",\"184.106.153.149\",80\r\n");
   611  0007BC  0E36               	movlw	low STR_6
   612  0007BE  6E01               	movwf	uart_string1@str,c
   613  0007C0  0E06               	movlw	high STR_6
   614  0007C2  6E02               	movwf	uart_string1@str+1,c
   615  0007C4  EC37  F005         	call	_uart_string1	;wreg free
   616                           
   617                           ;Automation-4.c: 181: _delay((unsigned long)((3000)*(16000000/4000.0)));
   618  0007C8  0E3D               	movlw	61
   619  0007CA  6E21               	movwf	(??_main+1)& (0+255),c
   620  0007CC  0EE1               	movlw	225
   621  0007CE  6E20               	movwf	??_main& (0+255),c
   622  0007D0  0E40               	movlw	64
   623  0007D2                     u407:
   624  0007D2  2EE8               	decfsz	wreg,f,c
   625  0007D4  D7FE               	bra	u407
   626  0007D6  2E20               	decfsz	??_main& (0+255),f,c
   627  0007D8  D7FC               	bra	u407
   628  0007DA  2E21               	decfsz	(??_main+1)& (0+255),f,c
   629  0007DC  D7FA               	bra	u407
   630                           
   631                           ;Automation-4.c: 182: uart_string1("AT+CIPSEND=4,50\r\n");
   632  0007DE  0E9E               	movlw	low STR_7
   633  0007E0  6E01               	movwf	uart_string1@str,c
   634  0007E2  0E06               	movlw	high STR_7
   635  0007E4  6E02               	movwf	uart_string1@str+1,c
   636  0007E6  EC37  F005         	call	_uart_string1	;wreg free
   637                           
   638                           ;Automation-4.c: 183: _delay((unsigned long)((1000)*(16000000/4000.0)));
   639  0007EA  0E15               	movlw	21
   640  0007EC  6E21               	movwf	(??_main+1)& (0+255),c
   641  0007EE  0E4B               	movlw	75
   642  0007F0  6E20               	movwf	??_main& (0+255),c
   643  0007F2  0EBE               	movlw	190
   644  0007F4                     u417:
   645  0007F4  2EE8               	decfsz	wreg,f,c
   646  0007F6  D7FE               	bra	u417
   647  0007F8  2E20               	decfsz	??_main& (0+255),f,c
   648  0007FA  D7FC               	bra	u417
   649  0007FC  2E21               	decfsz	(??_main+1)& (0+255),f,c
   650  0007FE  D7FA               	bra	u417
   651  000800  D000               	nop2	
   652                           
   653                           ;Automation-4.c: 184: x=adc_read(0);
   654  000802  0E00               	movlw	0
   655  000804  ECF1  F004         	call	_adc_read
   656  000808  C001  F022         	movff	?_adc_read,main@x
   657  00080C  C002  F023         	movff	?_adc_read+1,main@x+1
   658                           
   659                           ;Automation-4.c: 185: uart_string1("GET /update?key=KJXS2LH61ERDJDAP&field1=");
   660  000810  0E61               	movlw	low STR_8
   661  000812  6E01               	movwf	uart_string1@str,c
   662  000814  0E06               	movlw	high STR_8
   663  000816  6E02               	movwf	uart_string1@str+1,c
   664  000818  EC37  F005         	call	_uart_string1	;wreg free
   665                           
   666                           ;Automation-4.c: 186: uart_num1(x);
   667  00081C  C022  F008         	movff	main@x,uart_num1@num
   668  000820  C023  F009         	movff	main@x+1,uart_num1@num+1
   669  000824  EC1B  F004         	call	_uart_num1	;wreg free
   670                           
   671                           ;Automation-4.c: 187: uart_string1("\r\n");
   672  000828  0E33               	movlw	low (STR_2+50)
   673  00082A  6E01               	movwf	uart_string1@str,c
   674  00082C  0E06               	movlw	high (STR_2+50)
   675  00082E  6E02               	movwf	uart_string1@str+1,c
   676  000830  EC37  F005         	call	_uart_string1	;wreg free
   677  000834  D78D               	goto	l1013
   678  000836                     __end_of_main:
   679                           	opt stack 0
   680                           tblptru	equ	0xFF8
   681                           tblptrh	equ	0xFF7
   682                           wreg	equ	0xFE8
   683                           
   684 ;; *************** function _uart_string1 *****************
   685 ;; Defined at:
   686 ;;		line 103 in file "Automation-4.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;  str             2    0[COMRAM] PTR unsigned char 
   689 ;;		 -> STR_9(3), STR_8(41), STR_7(18), STR_6(43), 
   690 ;;		 -> STR_5(20), STR_4(14), STR_3(5), STR_2(53), 
   691 ;;		 -> STR_1(5), 
   692 ;; Auto vars:     Size  Location     Type
   693 ;;		None
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   703 ;;      Params:         2       0       0       0       0       0       0
   704 ;;      Locals:         0       0       0       0       0       0       0
   705 ;;      Temps:          0       0       0       0       0       0       0
   706 ;;      Totals:         2       0       0       0       0       0       0
   707 ;;Total ram usage:        2 bytes
   708 ;; Hardware stack levels used:    1
   709 ;; This function calls:
   710 ;;		Nothing
   711 ;; This function is called by:
   712 ;;		_main
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           	psect	text1
   717  000A6E                     __ptext1:
   718                           	opt stack 0
   719  000A6E                     _uart_string1:
   720                           	opt stack 30
   721                           
   722                           ;Automation-4.c: 105: while((*str)!='\0')
   723                           
   724                           ;incstack = 0
   725  000A6E  D00B               	goto	l959
   726  000A70                     l52:
   727  000A70  A89E               	btfss	3998,4,c	;volatile
   728  000A72  D7FE               	goto	l52
   729                           
   730                           ;Automation-4.c: 108: TXREG1=(*str);
   731  000A74  C001  FFF6         	movff	uart_string1@str,tblptrl
   732  000A78  C002  FFF7         	movff	uart_string1@str+1,tblptrh
   733  000A7C                     	if	0	;tblptru may be non-zero
   734  000A7C                     	endif
   735  000A7C                     	if	0	;tblptru may be non-zero
   736  000A7C                     	endif
   737  000A7C  0008               	tblrd		*
   738  000A7E  CFF5 FFAD          	movff	tablat,4013	;volatile
   739                           
   740                           ;Automation-4.c: 109: str++;
   741  000A82  4A01               	infsnz	uart_string1@str,f,c
   742  000A84  2A02               	incf	uart_string1@str+1,f,c
   743  000A86                     l959:
   744  000A86  C001  FFF6         	movff	uart_string1@str,tblptrl
   745  000A8A  C002  FFF7         	movff	uart_string1@str+1,tblptrh
   746  000A8E                     	if	0	;tblptru may be non-zero
   747  000A8E                     	endif
   748  000A8E                     	if	0	;tblptru may be non-zero
   749  000A8E                     	endif
   750  000A8E  0008               	tblrd		*
   751  000A90  50F5               	movf	tablat,w,c
   752  000A92  0900               	iorlw	0
   753  000A94  B4D8               	btfsc	status,2,c
   754  000A96  0012               	return	
   755  000A98  D7EB               	goto	l52
   756  000A9A                     __end_of_uart_string1:
   757                           	opt stack 0
   758                           tblptru	equ	0xFF8
   759                           tblptrh	equ	0xFF7
   760                           tblptrl	equ	0xFF6
   761                           tablat	equ	0xFF5
   762                           wreg	equ	0xFE8
   763                           status	equ	0xFD8
   764                           
   765 ;; *************** function _uart_num1 *****************
   766 ;; Defined at:
   767 ;;		line 113 in file "Automation-4.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;  num             2    7[COMRAM] unsigned int 
   770 ;; Auto vars:     Size  Location     Type
   771 ;;  n              16   13[COMRAM] unsigned char [16]
   772 ;;  j               1   30[COMRAM] unsigned char 
   773 ;;  i               1   29[COMRAM] unsigned char 
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      void 
   776 ;; Registers used:
   777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   783 ;;      Params:         2       0       0       0       0       0       0
   784 ;;      Locals:        18       0       0       0       0       0       0
   785 ;;      Temps:          4       0       0       0       0       0       0
   786 ;;      Totals:        24       0       0       0       0       0       0
   787 ;;Total ram usage:       24 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; Hardware stack levels required when called:    1
   790 ;; This function calls:
   791 ;;		___lwdiv
   792 ;;		___lwmod
   793 ;;		_uart_send1
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text2
   800  000836                     __ptext2:
   801                           	opt stack 0
   802  000836                     _uart_num1:
   803                           	opt stack 29
   804                           
   805                           ;Automation-4.c: 115: unsigned char n[16], i, j;
   806                           ;Automation-4.c: 116: i = 0;
   807                           
   808                           ;incstack = 0
   809  000836  0E00               	movlw	0
   810  000838  6E1E               	movwf	uart_num1@i,c
   811  00083A                     l963:
   812                           
   813                           ;Automation-4.c: 118: {
   814                           ;Automation-4.c: 119: n[i] = (num % 10) + 48;
   815  00083A  501E               	movf	uart_num1@i,w,c
   816  00083C  0D01               	mullw	1
   817  00083E  0E0E               	movlw	low uart_num1@n
   818  000840  24F3               	addwf	prodl,w,c
   819  000842  6ED9               	movwf	fsr2l,c
   820  000844  0E00               	movlw	high uart_num1@n
   821  000846  20F4               	addwfc	prodh,w,c
   822  000848  6EDA               	movwf	fsr2h,c
   823  00084A  C008  F001         	movff	uart_num1@num,___lwmod@dividend
   824  00084E  C009  F002         	movff	uart_num1@num+1,___lwmod@dividend+1
   825  000852  0E00               	movlw	0
   826  000854  6E04               	movwf	___lwmod@divisor+1,c
   827  000856  0E0A               	movlw	10
   828  000858  6E03               	movwf	___lwmod@divisor,c
   829  00085A  EC16  F005         	call	___lwmod	;wreg free
   830  00085E  5001               	movf	?___lwmod,w,c
   831  000860  0F30               	addlw	48
   832  000862  6EDF               	movwf	indf2,c
   833                           
   834                           ;Automation-4.c: 120: num = num / 10;
   835  000864  C008  F001         	movff	uart_num1@num,___lwdiv@dividend
   836  000868  C009  F002         	movff	uart_num1@num+1,___lwdiv@dividend+1
   837  00086C  0E00               	movlw	0
   838  00086E  6E04               	movwf	___lwdiv@divisor+1,c
   839  000870  0E0A               	movlw	10
   840  000872  6E03               	movwf	___lwdiv@divisor,c
   841  000874  ECA1  F004         	call	___lwdiv	;wreg free
   842  000878  C001  F008         	movff	?___lwdiv,uart_num1@num
   843  00087C  C002  F009         	movff	?___lwdiv+1,uart_num1@num+1
   844                           
   845                           ;Automation-4.c: 121: i++;
   846  000880  2A1E               	incf	uart_num1@i,f,c
   847                           
   848                           ;Automation-4.c: 122: }while(num!=0);
   849  000882  5008               	movf	uart_num1@num,w,c
   850  000884  1009               	iorwf	uart_num1@num+1,w,c
   851  000886  A4D8               	btfss	status,2,c
   852  000888  D7D8               	goto	l963
   853                           
   854                           ;Automation-4.c: 124: for(j=i;j>0;j--)
   855  00088A  C01E  F01F         	movff	uart_num1@i,uart_num1@j
   856  00088E                     l971:
   857  00088E  501F               	movf	uart_num1@j,w,c
   858  000890  B4D8               	btfsc	status,2,c
   859  000892  0012               	return	
   860                           
   861                           ;Automation-4.c: 125: {
   862                           ;Automation-4.c: 126: uart_send1(n[j-1]);
   863  000894  0EFF               	movlw	255
   864  000896  6E0A               	movwf	??_uart_num1& (0+255),c
   865  000898  0EFF               	movlw	255
   866  00089A  6E0B               	movwf	(??_uart_num1+1)& (0+255),c
   867  00089C  501F               	movf	uart_num1@j,w,c
   868  00089E  6E0C               	movwf	(??_uart_num1+2)& (0+255),c
   869  0008A0  6A0D               	clrf	(??_uart_num1+3)& (0+255),c
   870  0008A2  500A               	movf	??_uart_num1,w,c
   871  0008A4  260C               	addwf	??_uart_num1+2,f,c
   872  0008A6  500B               	movf	??_uart_num1+1,w,c
   873  0008A8  220D               	addwfc	??_uart_num1+3,f,c
   874  0008AA  0E0E               	movlw	low uart_num1@n
   875  0008AC  240C               	addwf	??_uart_num1+2,w,c
   876  0008AE  6ED9               	movwf	fsr2l,c
   877  0008B0  0E00               	movlw	high uart_num1@n
   878  0008B2  200D               	addwfc	??_uart_num1+3,w,c
   879  0008B4  6EDA               	movwf	fsr2h,c
   880  0008B6  50DF               	movf	indf2,w,c
   881  0008B8  EC54  F005         	call	_uart_send1
   882  0008BC  061F               	decf	uart_num1@j,f,c
   883  0008BE  D7E7               	goto	l971
   884  0008C0                     __end_of_uart_num1:
   885                           	opt stack 0
   886                           tblptru	equ	0xFF8
   887                           tblptrh	equ	0xFF7
   888                           tblptrl	equ	0xFF6
   889                           tablat	equ	0xFF5
   890                           prodh	equ	0xFF4
   891                           prodl	equ	0xFF3
   892                           wreg	equ	0xFE8
   893                           indf2	equ	0xFDF
   894                           fsr2h	equ	0xFDA
   895                           fsr2l	equ	0xFD9
   896                           status	equ	0xFD8
   897                           
   898 ;; *************** function _uart_send1 *****************
   899 ;; Defined at:
   900 ;;		line 130 in file "Automation-4.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;  ch              1    wreg     unsigned char 
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  ch              1    0[COMRAM] unsigned char 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   914 ;;      Params:         0       0       0       0       0       0       0
   915 ;;      Locals:         1       0       0       0       0       0       0
   916 ;;      Temps:          0       0       0       0       0       0       0
   917 ;;      Totals:         1       0       0       0       0       0       0
   918 ;;Total ram usage:        1 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; This function calls:
   921 ;;		Nothing
   922 ;; This function is called by:
   923 ;;		_uart_num1
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           	psect	text3
   928  000AA8                     __ptext3:
   929                           	opt stack 0
   930  000AA8                     _uart_send1:
   931                           	opt stack 29
   932                           
   933                           ;incstack = 0
   934                           ;uart_send1@ch stored from wreg
   935  000AA8  6E01               	movwf	uart_send1@ch,c
   936  000AAA                     l66:
   937  000AAA  A89E               	btfss	3998,4,c	;volatile
   938  000AAC  D7FE               	goto	l66
   939                           
   940                           ;Automation-4.c: 133: TXREG1=ch;
   941  000AAE  C001  FFAD         	movff	uart_send1@ch,4013	;volatile
   942  000AB2  0012               	return		;funcret
   943  000AB4                     __end_of_uart_send1:
   944                           	opt stack 0
   945                           tblptru	equ	0xFF8
   946                           tblptrh	equ	0xFF7
   947                           tblptrl	equ	0xFF6
   948                           tablat	equ	0xFF5
   949                           prodh	equ	0xFF4
   950                           prodl	equ	0xFF3
   951                           wreg	equ	0xFE8
   952                           indf2	equ	0xFDF
   953                           fsr2h	equ	0xFDA
   954                           fsr2l	equ	0xFD9
   955                           status	equ	0xFD8
   956                           
   957 ;; *************** function ___lwmod *****************
   958 ;; Defined at:
   959 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;  dividend        2    0[COMRAM] unsigned int 
   962 ;;  divisor         2    2[COMRAM] unsigned int 
   963 ;; Auto vars:     Size  Location     Type
   964 ;;  counter         1    4[COMRAM] unsigned char 
   965 ;; Return value:  Size  Location     Type
   966 ;;                  2    0[COMRAM] unsigned int 
   967 ;; Registers used:
   968 ;;		wreg, status,2, status,0
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   974 ;;      Params:         4       0       0       0       0       0       0
   975 ;;      Locals:         1       0       0       0       0       0       0
   976 ;;      Temps:          0       0       0       0       0       0       0
   977 ;;      Totals:         5       0       0       0       0       0       0
   978 ;;Total ram usage:        5 bytes
   979 ;; Hardware stack levels used:    1
   980 ;; This function calls:
   981 ;;		Nothing
   982 ;; This function is called by:
   983 ;;		_uart_num1
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text4
   988  000A2C                     __ptext4:
   989                           	opt stack 0
   990  000A2C                     ___lwmod:
   991                           	opt stack 29
   992                           
   993                           ;incstack = 0
   994  000A2C  5003               	movf	___lwmod@divisor,w,c
   995  000A2E  1004               	iorwf	___lwmod@divisor+1,w,c
   996  000A30  B4D8               	btfsc	status,2,c
   997  000A32  D018               	goto	l498
   998  000A34  0E01               	movlw	1
   999  000A36  6E05               	movwf	___lwmod@counter,c
  1000  000A38  D004               	goto	l923
  1001  000A3A                     l921:
  1002  000A3A  90D8               	bcf	status,0,c
  1003  000A3C  3603               	rlcf	___lwmod@divisor,f,c
  1004  000A3E  3604               	rlcf	___lwmod@divisor+1,f,c
  1005  000A40  2A05               	incf	___lwmod@counter,f,c
  1006  000A42                     l923:
  1007  000A42  AE04               	btfss	___lwmod@divisor+1,7,c
  1008  000A44  D7FA               	goto	l921
  1009  000A46                     l925:
  1010  000A46  5003               	movf	___lwmod@divisor,w,c
  1011  000A48  5C01               	subwf	___lwmod@dividend,w,c
  1012  000A4A  5004               	movf	___lwmod@divisor+1,w,c
  1013  000A4C  5802               	subwfb	___lwmod@dividend+1,w,c
  1014  000A4E  A0D8               	btfss	status,0,c
  1015  000A50  D004               	goto	l929
  1016  000A52  5003               	movf	___lwmod@divisor,w,c
  1017  000A54  5E01               	subwf	___lwmod@dividend,f,c
  1018  000A56  5004               	movf	___lwmod@divisor+1,w,c
  1019  000A58  5A02               	subwfb	___lwmod@dividend+1,f,c
  1020  000A5A                     l929:
  1021  000A5A  90D8               	bcf	status,0,c
  1022  000A5C  3204               	rrcf	___lwmod@divisor+1,f,c
  1023  000A5E  3203               	rrcf	___lwmod@divisor,f,c
  1024  000A60  2E05               	decfsz	___lwmod@counter,f,c
  1025  000A62  D7F1               	goto	l925
  1026  000A64                     l498:
  1027  000A64  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1028  000A68  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1029  000A6C  0012               	return		;funcret
  1030  000A6E                     __end_of___lwmod:
  1031                           	opt stack 0
  1032                           tblptru	equ	0xFF8
  1033                           tblptrh	equ	0xFF7
  1034                           tblptrl	equ	0xFF6
  1035                           tablat	equ	0xFF5
  1036                           prodh	equ	0xFF4
  1037                           prodl	equ	0xFF3
  1038                           wreg	equ	0xFE8
  1039                           indf2	equ	0xFDF
  1040                           fsr2h	equ	0xFDA
  1041                           fsr2l	equ	0xFD9
  1042                           status	equ	0xFD8
  1043                           
  1044 ;; *************** function ___lwdiv *****************
  1045 ;; Defined at:
  1046 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  dividend        2    0[COMRAM] unsigned int 
  1049 ;;  divisor         2    2[COMRAM] unsigned int 
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;  quotient        2    4[COMRAM] unsigned int 
  1052 ;;  counter         1    6[COMRAM] unsigned char 
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  2    0[COMRAM] unsigned int 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2, status,0
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1062 ;;      Params:         4       0       0       0       0       0       0
  1063 ;;      Locals:         3       0       0       0       0       0       0
  1064 ;;      Temps:          0       0       0       0       0       0       0
  1065 ;;      Totals:         7       0       0       0       0       0       0
  1066 ;;Total ram usage:        7 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; This function calls:
  1069 ;;		Nothing
  1070 ;; This function is called by:
  1071 ;;		_uart_num1
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text5
  1076  000942                     __ptext5:
  1077                           	opt stack 0
  1078  000942                     ___lwdiv:
  1079                           	opt stack 29
  1080                           
  1081                           ;incstack = 0
  1082  000942  0E00               	movlw	0
  1083  000944  6E06               	movwf	___lwdiv@quotient+1,c
  1084  000946  0E00               	movlw	0
  1085  000948  6E05               	movwf	___lwdiv@quotient,c
  1086  00094A  5003               	movf	___lwdiv@divisor,w,c
  1087  00094C  1004               	iorwf	___lwdiv@divisor+1,w,c
  1088  00094E  B4D8               	btfsc	status,2,c
  1089  000950  D01C               	goto	l488
  1090  000952  0E01               	movlw	1
  1091  000954  6E07               	movwf	___lwdiv@counter,c
  1092  000956  D004               	goto	l903
  1093  000958                     l901:
  1094  000958  90D8               	bcf	status,0,c
  1095  00095A  3603               	rlcf	___lwdiv@divisor,f,c
  1096  00095C  3604               	rlcf	___lwdiv@divisor+1,f,c
  1097  00095E  2A07               	incf	___lwdiv@counter,f,c
  1098  000960                     l903:
  1099  000960  AE04               	btfss	___lwdiv@divisor+1,7,c
  1100  000962  D7FA               	goto	l901
  1101  000964                     l905:
  1102  000964  90D8               	bcf	status,0,c
  1103  000966  3605               	rlcf	___lwdiv@quotient,f,c
  1104  000968  3606               	rlcf	___lwdiv@quotient+1,f,c
  1105  00096A  5003               	movf	___lwdiv@divisor,w,c
  1106  00096C  5C01               	subwf	___lwdiv@dividend,w,c
  1107  00096E  5004               	movf	___lwdiv@divisor+1,w,c
  1108  000970  5802               	subwfb	___lwdiv@dividend+1,w,c
  1109  000972  A0D8               	btfss	status,0,c
  1110  000974  D005               	goto	l913
  1111  000976  5003               	movf	___lwdiv@divisor,w,c
  1112  000978  5E01               	subwf	___lwdiv@dividend,f,c
  1113  00097A  5004               	movf	___lwdiv@divisor+1,w,c
  1114  00097C  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1115  00097E  8005               	bsf	___lwdiv@quotient,0,c
  1116  000980                     l913:
  1117  000980  90D8               	bcf	status,0,c
  1118  000982  3204               	rrcf	___lwdiv@divisor+1,f,c
  1119  000984  3203               	rrcf	___lwdiv@divisor,f,c
  1120  000986  2E07               	decfsz	___lwdiv@counter,f,c
  1121  000988  D7ED               	goto	l905
  1122  00098A                     l488:
  1123  00098A  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1124  00098E  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1125  000992  0012               	return		;funcret
  1126  000994                     __end_of___lwdiv:
  1127                           	opt stack 0
  1128                           tblptru	equ	0xFF8
  1129                           tblptrh	equ	0xFF7
  1130                           tblptrl	equ	0xFF6
  1131                           tablat	equ	0xFF5
  1132                           prodh	equ	0xFF4
  1133                           prodl	equ	0xFF3
  1134                           wreg	equ	0xFE8
  1135                           indf2	equ	0xFDF
  1136                           fsr2h	equ	0xFDA
  1137                           fsr2l	equ	0xFD9
  1138                           status	equ	0xFD8
  1139                           
  1140 ;; *************** function _uart_init1 *****************
  1141 ;; Defined at:
  1142 ;;		line 87 in file "Automation-4.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;  baud            4   13[COMRAM] unsigned long 
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;  n               2   17[COMRAM] unsigned int 
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  1    wreg      void 
  1149 ;; Registers used:
  1150 ;;		wreg, status,2, status,0, cstack
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1156 ;;      Params:         4       0       0       0       0       0       0
  1157 ;;      Locals:         2       0       0       0       0       0       0
  1158 ;;      Temps:          0       0       0       0       0       0       0
  1159 ;;      Totals:         6       0       0       0       0       0       0
  1160 ;;Total ram usage:        6 bytes
  1161 ;; Hardware stack levels used:    1
  1162 ;; Hardware stack levels required when called:    1
  1163 ;; This function calls:
  1164 ;;		___lldiv
  1165 ;; This function is called by:
  1166 ;;		_main
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text6
  1171  000994                     __ptext6:
  1172                           	opt stack 0
  1173  000994                     _uart_init1:
  1174                           	opt stack 29
  1175                           
  1176                           ;Automation-4.c: 89: unsigned int n;
  1177                           ;Automation-4.c: 90: TXSTA1 = 0x00;
  1178                           
  1179                           ;incstack = 0
  1180  000994  0E00               	movlw	0
  1181  000996  6EAC               	movwf	4012,c	;volatile
  1182                           
  1183                           ;Automation-4.c: 91: RCSTA1 = 0x00;
  1184  000998  0E00               	movlw	0
  1185  00099A  6EAB               	movwf	4011,c	;volatile
  1186                           
  1187                           ;Automation-4.c: 92: TXSTAbits.SYNC = 0;
  1188  00099C  98AC               	bcf	4012,4,c	;volatile
  1189                           
  1190                           ;Automation-4.c: 93: BAUDCON1bits.BRG16 = 1;
  1191  00099E  86B8               	bsf	4024,3,c	;volatile
  1192                           
  1193                           ;Automation-4.c: 94: RCSTA1bits.SPEN = 1;
  1194  0009A0  8EAB               	bsf	4011,7,c	;volatile
  1195                           
  1196                           ;Automation-4.c: 95: RCSTA1bits.CREN = 1;
  1197  0009A2  88AB               	bsf	4011,4,c	;volatile
  1198                           
  1199                           ;Automation-4.c: 96: TXSTA1bits.BRGH = 1;
  1200  0009A4  84AC               	bsf	4012,2,c	;volatile
  1201                           
  1202                           ;Automation-4.c: 97: TXSTA1bits.TXEN = 1;
  1203  0009A6  8AAC               	bsf	4012,5,c	;volatile
  1204                           
  1205                           ;Automation-4.c: 98: n = ((16000000/4)/baud) - 1;
  1206  0009A8  0E00               	movlw	0
  1207  0009AA  6E01               	movwf	___lldiv@dividend,c
  1208  0009AC  0E09               	movlw	9
  1209  0009AE  6E02               	movwf	___lldiv@dividend+1,c
  1210  0009B0  0E3D               	movlw	61
  1211  0009B2  6E03               	movwf	___lldiv@dividend+2,c
  1212  0009B4  0E00               	movlw	0
  1213  0009B6  6E04               	movwf	___lldiv@dividend+3,c
  1214  0009B8  C00E  F005         	movff	uart_init1@baud,___lldiv@divisor
  1215  0009BC  C00F  F006         	movff	uart_init1@baud+1,___lldiv@divisor+1
  1216  0009C0  C010  F007         	movff	uart_init1@baud+2,___lldiv@divisor+2
  1217  0009C4  C011  F008         	movff	uart_init1@baud+3,___lldiv@divisor+3
  1218  0009C8  EC60  F004         	call	___lldiv	;wreg free
  1219  0009CC  0EFF               	movlw	255
  1220  0009CE  2401               	addwf	?___lldiv,w,c
  1221  0009D0  6E12               	movwf	uart_init1@n,c
  1222  0009D2  0EFF               	movlw	255
  1223  0009D4  2002               	addwfc	?___lldiv+1,w,c
  1224  0009D6  6E13               	movwf	uart_init1@n+1,c
  1225                           
  1226                           ;Automation-4.c: 99: SPBRGH1 = (n>>8);
  1227  0009D8  5013               	movf	uart_init1@n+1,w,c
  1228  0009DA  6EB0               	movwf	4016,c	;volatile
  1229                           
  1230                           ;Automation-4.c: 100: SPBRG1 = n & 0xFF;
  1231  0009DC  C012  FFAF         	movff	uart_init1@n,4015	;volatile
  1232  0009E0  0012               	return		;funcret
  1233  0009E2                     __end_of_uart_init1:
  1234                           	opt stack 0
  1235                           tblptru	equ	0xFF8
  1236                           tblptrh	equ	0xFF7
  1237                           tblptrl	equ	0xFF6
  1238                           tablat	equ	0xFF5
  1239                           prodh	equ	0xFF4
  1240                           prodl	equ	0xFF3
  1241                           wreg	equ	0xFE8
  1242                           indf2	equ	0xFDF
  1243                           fsr2h	equ	0xFDA
  1244                           fsr2l	equ	0xFD9
  1245                           status	equ	0xFD8
  1246                           
  1247 ;; *************** function ___lldiv *****************
  1248 ;; Defined at:
  1249 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;  dividend        4    0[COMRAM] unsigned long 
  1252 ;;  divisor         4    4[COMRAM] unsigned long 
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  quotient        4    8[COMRAM] unsigned long 
  1255 ;;  counter         1   12[COMRAM] unsigned char 
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  4    0[COMRAM] unsigned long 
  1258 ;; Registers used:
  1259 ;;		wreg, status,2, status,0
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1265 ;;      Params:         8       0       0       0       0       0       0
  1266 ;;      Locals:         5       0       0       0       0       0       0
  1267 ;;      Temps:          0       0       0       0       0       0       0
  1268 ;;      Totals:        13       0       0       0       0       0       0
  1269 ;;Total ram usage:       13 bytes
  1270 ;; Hardware stack levels used:    1
  1271 ;; This function calls:
  1272 ;;		Nothing
  1273 ;; This function is called by:
  1274 ;;		_uart_init1
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text7
  1279  0008C0                     __ptext7:
  1280                           	opt stack 0
  1281  0008C0                     ___lldiv:
  1282                           	opt stack 29
  1283                           
  1284                           ;incstack = 0
  1285  0008C0  0E00               	movlw	0
  1286  0008C2  6E09               	movwf	___lldiv@quotient,c
  1287  0008C4  0E00               	movlw	0
  1288  0008C6  6E0A               	movwf	___lldiv@quotient+1,c
  1289  0008C8  0E00               	movlw	0
  1290  0008CA  6E0B               	movwf	___lldiv@quotient+2,c
  1291  0008CC  0E00               	movlw	0
  1292  0008CE  6E0C               	movwf	___lldiv@quotient+3,c
  1293  0008D0  5005               	movf	___lldiv@divisor,w,c
  1294  0008D2  1006               	iorwf	___lldiv@divisor+1,w,c
  1295  0008D4  1007               	iorwf	___lldiv@divisor+2,w,c
  1296  0008D6  1008               	iorwf	___lldiv@divisor+3,w,c
  1297  0008D8  B4D8               	btfsc	status,2,c
  1298  0008DA  D02A               	goto	l435
  1299  0008DC  0E01               	movlw	1
  1300  0008DE  6E0D               	movwf	___lldiv@counter,c
  1301  0008E0  D006               	goto	l881
  1302  0008E2                     l879:
  1303  0008E2  90D8               	bcf	status,0,c
  1304  0008E4  3605               	rlcf	___lldiv@divisor,f,c
  1305  0008E6  3606               	rlcf	___lldiv@divisor+1,f,c
  1306  0008E8  3607               	rlcf	___lldiv@divisor+2,f,c
  1307  0008EA  3608               	rlcf	___lldiv@divisor+3,f,c
  1308  0008EC  2A0D               	incf	___lldiv@counter,f,c
  1309  0008EE                     l881:
  1310  0008EE  AE08               	btfss	___lldiv@divisor+3,7,c
  1311  0008F0  D7F8               	goto	l879
  1312  0008F2                     l883:
  1313  0008F2  90D8               	bcf	status,0,c
  1314  0008F4  3609               	rlcf	___lldiv@quotient,f,c
  1315  0008F6  360A               	rlcf	___lldiv@quotient+1,f,c
  1316  0008F8  360B               	rlcf	___lldiv@quotient+2,f,c
  1317  0008FA  360C               	rlcf	___lldiv@quotient+3,f,c
  1318  0008FC  5005               	movf	___lldiv@divisor,w,c
  1319  0008FE  5C01               	subwf	___lldiv@dividend,w,c
  1320  000900  5006               	movf	___lldiv@divisor+1,w,c
  1321  000902  5802               	subwfb	___lldiv@dividend+1,w,c
  1322  000904  5007               	movf	___lldiv@divisor+2,w,c
  1323  000906  5803               	subwfb	___lldiv@dividend+2,w,c
  1324  000908  5008               	movf	___lldiv@divisor+3,w,c
  1325  00090A  5804               	subwfb	___lldiv@dividend+3,w,c
  1326  00090C  A0D8               	btfss	status,0,c
  1327  00090E  D009               	goto	l891
  1328  000910  5005               	movf	___lldiv@divisor,w,c
  1329  000912  5E01               	subwf	___lldiv@dividend,f,c
  1330  000914  5006               	movf	___lldiv@divisor+1,w,c
  1331  000916  5A02               	subwfb	___lldiv@dividend+1,f,c
  1332  000918  5007               	movf	___lldiv@divisor+2,w,c
  1333  00091A  5A03               	subwfb	___lldiv@dividend+2,f,c
  1334  00091C  5008               	movf	___lldiv@divisor+3,w,c
  1335  00091E  5A04               	subwfb	___lldiv@dividend+3,f,c
  1336  000920  8009               	bsf	___lldiv@quotient,0,c
  1337  000922                     l891:
  1338  000922  90D8               	bcf	status,0,c
  1339  000924  3208               	rrcf	___lldiv@divisor+3,f,c
  1340  000926  3207               	rrcf	___lldiv@divisor+2,f,c
  1341  000928  3206               	rrcf	___lldiv@divisor+1,f,c
  1342  00092A  3205               	rrcf	___lldiv@divisor,f,c
  1343  00092C  2E0D               	decfsz	___lldiv@counter,f,c
  1344  00092E  D7E1               	goto	l883
  1345  000930                     l435:
  1346  000930  C009  F001         	movff	___lldiv@quotient,?___lldiv
  1347  000934  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  1348  000938  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  1349  00093C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  1350  000940  0012               	return		;funcret
  1351  000942                     __end_of___lldiv:
  1352                           	opt stack 0
  1353                           tblptru	equ	0xFF8
  1354                           tblptrh	equ	0xFF7
  1355                           tblptrl	equ	0xFF6
  1356                           tablat	equ	0xFF5
  1357                           prodh	equ	0xFF4
  1358                           prodl	equ	0xFF3
  1359                           wreg	equ	0xFE8
  1360                           indf2	equ	0xFDF
  1361                           fsr2h	equ	0xFDA
  1362                           fsr2l	equ	0xFD9
  1363                           status	equ	0xFD8
  1364                           
  1365 ;; *************** function _adc_read *****************
  1366 ;; Defined at:
  1367 ;;		line 142 in file "Automation-4.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;  channel         1    wreg     unsigned char 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;  channel         1    4[COMRAM] unsigned char 
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  2    0[COMRAM] unsigned int 
  1374 ;; Registers used:
  1375 ;;		wreg, status,2, status,0
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1381 ;;      Params:         2       0       0       0       0       0       0
  1382 ;;      Locals:         1       0       0       0       0       0       0
  1383 ;;      Temps:          2       0       0       0       0       0       0
  1384 ;;      Totals:         5       0       0       0       0       0       0
  1385 ;;Total ram usage:        5 bytes
  1386 ;; Hardware stack levels used:    1
  1387 ;; This function calls:
  1388 ;;		Nothing
  1389 ;; This function is called by:
  1390 ;;		_main
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           	psect	text8
  1395  0009E2                     __ptext8:
  1396                           	opt stack 0
  1397  0009E2                     _adc_read:
  1398                           	opt stack 30
  1399                           
  1400                           ;incstack = 0
  1401                           ;adc_read@channel stored from wreg
  1402  0009E2  6E05               	movwf	adc_read@channel,c
  1403                           
  1404                           ;Automation-4.c: 144: if(channel > 5)
  1405  0009E4  0E05               	movlw	5
  1406  0009E6  6405               	cpfsgt	adc_read@channel,c
  1407  0009E8  D005               	goto	l987
  1408                           
  1409                           ;Automation-4.c: 145: return 0;
  1410  0009EA  0E00               	movlw	0
  1411  0009EC  6E02               	movwf	?_adc_read+1,c
  1412  0009EE  0E00               	movlw	0
  1413  0009F0  6E01               	movwf	?_adc_read,c
  1414  0009F2  0012               	return	
  1415  0009F4                     l987:
  1416                           
  1417                           ;Automation-4.c: 147: ADCON0=0x00;
  1418  0009F4  0E00               	movlw	0
  1419  0009F6  6EC2               	movwf	4034,c	;volatile
  1420                           
  1421                           ;Automation-4.c: 148: ADON=1;
  1422  0009F8  80C2               	bsf	4034,0,c	;volatile
  1423                           
  1424                           ;Automation-4.c: 149: ADCON0|=(channel<<2);
  1425  0009FA  4405               	rlncf	adc_read@channel,w,c
  1426  0009FC  46E8               	rlncf	wreg,f,c
  1427  0009FE  0BFC               	andlw	252
  1428  000A00  12C2               	iorwf	4034,f,c	;volatile
  1429                           
  1430                           ;Automation-4.c: 150: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1431  000A02  0E29               	movlw	41
  1432  000A04  6E04               	movwf	(??_adc_read+1)& (0+255),c
  1433  000A06  0E96               	movlw	150
  1434  000A08  6E03               	movwf	??_adc_read& (0+255),c
  1435  000A0A  0E7F               	movlw	127
  1436  000A0C                     u427:
  1437  000A0C  2EE8               	decfsz	wreg,f,c
  1438  000A0E  D7FE               	bra	u427
  1439  000A10  2E03               	decfsz	??_adc_read& (0+255),f,c
  1440  000A12  D7FC               	bra	u427
  1441  000A14  2E04               	decfsz	(??_adc_read+1)& (0+255),f,c
  1442  000A16  D7FA               	bra	u427
  1443  000A18  F000               	nop	
  1444                           
  1445                           ;Automation-4.c: 151: ADCON0bits.GO=1;
  1446  000A1A  82C2               	bsf	4034,1,c	;volatile
  1447  000A1C                     l77:
  1448  000A1C  B2C2               	btfsc	4034,1,c	;volatile
  1449  000A1E  D7FE               	goto	l77
  1450                           
  1451                           ;Automation-4.c: 153: ADON=0;
  1452  000A20  90C2               	bcf	4034,0,c	;volatile
  1453                           
  1454                           ;Automation-4.c: 154: return(ADRES);
  1455  000A22  CFC3 F001          	movff	4035,?_adc_read	;volatile
  1456  000A26  CFC4 F002          	movff	4036,?_adc_read+1	;volatile
  1457  000A2A  0012               	return		;funcret
  1458  000A2C                     __end_of_adc_read:
  1459                           	opt stack 0
  1460                           tblptru	equ	0xFF8
  1461                           tblptrh	equ	0xFF7
  1462                           tblptrl	equ	0xFF6
  1463                           tablat	equ	0xFF5
  1464                           prodh	equ	0xFF4
  1465                           prodl	equ	0xFF3
  1466                           wreg	equ	0xFE8
  1467                           indf2	equ	0xFDF
  1468                           fsr2h	equ	0xFDA
  1469                           fsr2l	equ	0xFD9
  1470                           status	equ	0xFD8
  1471                           
  1472 ;; *************** function _adc_init *****************
  1473 ;; Defined at:
  1474 ;;		line 136 in file "Automation-4.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1488 ;;      Params:         0       0       0       0       0       0       0
  1489 ;;      Locals:         0       0       0       0       0       0       0
  1490 ;;      Temps:          0       0       0       0       0       0       0
  1491 ;;      Totals:         0       0       0       0       0       0       0
  1492 ;;Total ram usage:        0 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; This function calls:
  1495 ;;		Nothing
  1496 ;; This function is called by:
  1497 ;;		_main
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           	psect	text9
  1502  000AB4                     __ptext9:
  1503                           	opt stack 0
  1504  000AB4                     _adc_init:
  1505                           	opt stack 30
  1506                           
  1507                           ;Automation-4.c: 138: ADCON1 = 0x00;
  1508                           
  1509                           ;incstack = 0
  1510  000AB4  0E00               	movlw	0
  1511  000AB6  6EC1               	movwf	4033,c	;volatile
  1512                           
  1513                           ;Automation-4.c: 139: ADCON2 = 0x8A;
  1514  000AB8  0E8A               	movlw	138
  1515  000ABA  6EC0               	movwf	4032,c	;volatile
  1516  000ABC  0012               	return		;funcret
  1517  000ABE                     __end_of_adc_init:
  1518                           	opt stack 0
  1519                           tblptru	equ	0xFF8
  1520                           tblptrh	equ	0xFF7
  1521                           tblptrl	equ	0xFF6
  1522                           tablat	equ	0xFF5
  1523                           prodh	equ	0xFF4
  1524                           prodl	equ	0xFF3
  1525                           wreg	equ	0xFE8
  1526                           indf2	equ	0xFDF
  1527                           fsr2h	equ	0xFDA
  1528                           fsr2l	equ	0xFD9
  1529                           status	equ	0xFD8
  1530                           tblptru	equ	0xFF8
  1531                           tblptrh	equ	0xFF7
  1532                           tblptrl	equ	0xFF6
  1533                           tablat	equ	0xFF5
  1534                           prodh	equ	0xFF4
  1535                           prodl	equ	0xFF3
  1536                           wreg	equ	0xFE8
  1537                           indf2	equ	0xFDF
  1538                           fsr2h	equ	0xFDA
  1539                           fsr2l	equ	0xFD9
  1540                           status	equ	0xFD8
  1541                           
  1542                           	psect	rparam
  1543  0000                     tblptru	equ	0xFF8
  1544                           tblptrh	equ	0xFF7
  1545                           tblptrl	equ	0xFF6
  1546                           tablat	equ	0xFF5
  1547                           prodh	equ	0xFF4
  1548                           prodl	equ	0xFF3
  1549                           wreg	equ	0xFE8
  1550                           indf2	equ	0xFDF
  1551                           fsr2h	equ	0xFDA
  1552                           fsr2l	equ	0xFD9
  1553                           status	equ	0xFD8


Data Sizes:
    Strings     194
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     35      35
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    uart_string1@str	PTR unsigned char  size(2) Largest target is 53
		 -> STR_9(CODE[3]), STR_8(CODE[41]), STR_7(CODE[18]), STR_6(CODE[43]), 
		 -> STR_5(CODE[20]), STR_4(CODE[14]), STR_3(CODE[5]), STR_2(CODE[53]), 
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_uart_num1
    _uart_num1->___lwdiv
    _uart_init1->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1993
                                             31 COMRAM     4     4      0
                           _adc_init
                           _adc_read
                         _uart_init1
                          _uart_num1
                       _uart_string1
 ---------------------------------------------------------------------------------
 (1) _uart_string1                                         2     0      2     621
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _uart_num1                                           24    22      2     884
                                              7 COMRAM    24    22      2
                            ___lwdiv
                            ___lwmod
                         _uart_send1
 ---------------------------------------------------------------------------------
 (2) _uart_send1                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _uart_init1                                           6     2      4     421
                                             13 COMRAM     6     2      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     290
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             5     3      2      44
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
   _adc_read
   _uart_init1
     ___lldiv
   _uart_num1
     ___lwdiv
     ___lwmod
     _uart_send1
   _uart_string1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     23      23       1       36.8%
STACK                0      0       0       2        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
ABS                  0      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BIGRAM             5FF      0       0      16        0.0%
DATA                 0      0       0      17        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Jan 10 13:12:27 2018

                     l52 0A70                       l66 0AAA                       l77 0A1C  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l435 0930                      l901 0958  
                    l903 0960                      l488 098A                      l913 0980  
                    l905 0964                      l921 0A3A                      l498 0A64  
                    l923 0A42                      l925 0A46                      l881 08EE  
                    l929 0A5A                      l891 0922                      l883 08F2  
                    l971 088E                      l963 083A                      l879 08E2  
                    l959 0A86                      l987 09F4             __CFG_CPB$OFF 000000  
                    u407 07D2                      u417 07F4             __CFG_CPD$OFF 000000  
                    u427 0A0C                      u347 06FA                      u357 071E  
                    u367 0742                      u377 0766                      u387 078A  
                    u397 07AE                      prod 000FF3                      wreg 000FE8  
             _TXSTA1bits 000FAC             __CFG_LVP$OFF 000000                     l1013 0750  
                   _ADON 007E10                     STR_1 06BE                     STR_2 0601  
                   STR_3 06BE                     STR_4 06B0                     STR_5 068A  
                   STR_6 0636                     STR_7 069E                     STR_8 0661  
                   STR_9 0633                     _main 06C4                     indf2 000FDF  
                   fsr2l 000FD9            __CFG_BORV$190 000000                     prodl 000FF3  
                   start 0000            __CFG_IESO$OFF 000000             ___param_bank 000000  
           _BAUDCON1bits 000FB8                    ?_main 0001                    _ADRES 000FC3  
        __end_of___lldiv 0942          __end_of___lwdiv 0994          __end_of___lwmod 0A6E  
                  _TX1IF 007CF4                    _TRISA 000F92                    _TRISC 000F94  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000       __CFG_MCLRE$EXTMCLR 000000                    main@x 0022  
                  tablat 000FF5                    status 000FD8           __CFG_FOSC$HSMP 000000  
        __initialization 0A9A             __end_of_main 0836                   ??_main 0020  
          __activetblptr 000001                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ANSELA 000F38                   _ANSELC 000F3A  
       __end_of_adc_init 0ABE         __end_of_adc_read 0A2C           __CFG_WDTEN$OFF 000000  
                 _RCSTA1 000FAB                   _SPBRG1 000FAF                   _TXREG1 000FAD  
                 _TXSTA1 000FAC           __CFG_XINST$OFF 000000                ??___lldiv 0009  
              ??___lwdiv 0005                ??___lwmod 0005             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
        __CFG_HFOFST$OFF 000000               __accesstop 0060  __end_of__initialization 0A9A  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
        __CFG_PLLCFG$OFF 000000       __CFG_CCP2MX$PORTC1 000000       __CFG_CCP3MX$PORTB5 000000  
              ?_adc_init 0001                ?_adc_read 0001       __size_of_uart_num1 008A  
      __CFG_PRICLKEN$OFF 000000                  _SPBRGH1 000FB0          __CFG_PWRTEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000                  ___lldiv 08C0  
                ___lwdiv 0942                  ___lwmod 0A2C             __psmallconst 0600  
        __CFG_STVREN$OFF 000000                  __pcinit 0A9A                  __ramtop 0600  
             ??_adc_init 0001               ??_adc_read 0003                  __ptext0 06C4  
                __ptext1 0A6E                  __ptext2 0836                  __ptext3 0AA8  
                __ptext4 0A2C                  __ptext5 0942                  __ptext6 0994  
                __ptext7 08C0                  __ptext8 09E2                  __ptext9 0AB4  
   end_of_initialization 0A9A        __end_of_uart_num1 08C0          ___lldiv@divisor 0005  
        ___lldiv@counter 000D            ?_uart_string1 0001               _uart_init1 0994  
             _uart_send1 0AA8              uart_init1@n 0012                _TXSTAbits 000FAC  
         ??_uart_string1 0003      start_initialization 0A9A              ?_uart_init1 000E  
            ?_uart_send1 0001        __size_of_adc_init 000A        __size_of_adc_read 004A  
        adc_read@channel 0005         ___lwdiv@dividend 0001                 ?___lldiv 0001  
               ?___lwdiv 0001                 ?___lwmod 0001              __smallconst 0600  
   __end_of_uart_string1 0A9A         ___lwdiv@quotient 0005      __size_of_uart_init1 004E  
    __size_of_uart_send1 000C         __CFG_WDTPS$32768 000000                _uart_num1 0836  
             uart_num1@i 001E               uart_num1@j 001F               uart_num1@n 000E  
             _ADCON0bits 000FC2                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0600       __CFG_BOREN$SBORDIS 000000        __CFG_P2BMX$PORTD2 000000  
             ?_uart_num1 0008         __size_of___lldiv 0082         __size_of___lwdiv 0052  
       __size_of___lwmod 0042                 _adc_init 0AB4                 _adc_read 09E2  
        ___lwdiv@divisor 0003          ___lwdiv@counter 0007           uart_init1@baud 000E  
          __size_of_main 0172             ??_uart_init1 0012             ??_uart_send1 0001  
  __size_of_uart_string1 002C         ___lwmod@dividend 0001         ___lldiv@dividend 0001  
     __end_of_uart_init1 09E2       __end_of_uart_send1 0AB4               _RCSTA1bits 000FAB  
           _uart_string1 0A6E              ??_uart_num1 000A         ___lldiv@quotient 0009  
        ___lwmod@divisor 0003          ___lwmod@counter 0005        __CFG_T3CMX$PORTC0 000000  
           uart_num1@num 0008             uart_send1@ch 0001          uart_string1@str 0001  
